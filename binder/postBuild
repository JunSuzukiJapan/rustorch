#!/bin/bash

# Binder post-build script for RusTorch
set -e

echo "🔧 Building RusTorch Python bindings for Binder..."

# Setup Rust environment
echo "🦀 Setting up Rust environment..."
export PATH="${HOME}/.cargo/bin:${PATH}"

# Verify Rust is available
if command -v rustc &> /dev/null; then
    echo "✅ Rust compiler found: $(rustc --version)"
else
    echo "❌ Rust compiler not found"
    exit 1
fi

# Set conda environment variables for maturin
export CONDA_PREFIX=${NB_PYTHON_PREFIX}
export VIRTUAL_ENV=${NB_PYTHON_PREFIX}

# Set library paths for BLAS/LAPACK (in case needed)
export PKG_CONFIG_PATH="${NB_PYTHON_PREFIX}/lib/pkgconfig:${PKG_CONFIG_PATH}"
export LIBRARY_PATH="${NB_PYTHON_PREFIX}/lib:${LIBRARY_PATH}"
export LD_LIBRARY_PATH="${NB_PYTHON_PREFIX}/lib:${LD_LIBRARY_PATH}"

# Build wheel and install (compatible with conda environment)
echo "📦 Building wheel..."
# Build without linalg feature to avoid LAPACK/BLAS dependency issues in Binder
maturin build --release --out dist --compatibility linux --no-default-features

# Install the built wheel
echo "📥 Installing wheel..."
pip install dist/*.whl

# Test the installation
echo "🧪 Testing installation..."
python3 -c "
try:
    import rustorch
    print('✅ RusTorch successfully installed in Binder!')
    print('✅ RusTorch Binderインストール成功！')
except ImportError as e:
    print(f'❌ Import failed: {e}')
    exit(1)
"

echo "✅ RusTorch Binder setup complete!"