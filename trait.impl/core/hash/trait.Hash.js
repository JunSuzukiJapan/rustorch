(function() {
    var implementors = Object.fromEntries([["rustorch",[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"enum\" href=\"rustorch/backends/compute_backend/enum.DeviceType.html\" title=\"enum rustorch::backends::compute_backend::DeviceType\">DeviceType</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"enum\" href=\"rustorch/backends/enum.DeviceType.html\" title=\"enum rustorch::backends::DeviceType\">DeviceType</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"enum\" href=\"rustorch/dtype/enum.DType.html\" title=\"enum rustorch::dtype::DType\">DType</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"enum\" href=\"rustorch/gpu/custom_kernels/enum.CustomKernelType.html\" title=\"enum rustorch::gpu::custom_kernels::CustomKernelType\">CustomKernelType</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"enum\" href=\"rustorch/gpu/enum.DeviceType.html\" title=\"enum rustorch::gpu::DeviceType\">DeviceType</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"enum\" href=\"rustorch/gpu/enum.GpuDevice.html\" title=\"enum rustorch::gpu::GpuDevice\">GpuDevice</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"enum\" href=\"rustorch/gpu/enum.MemoryLayout.html\" title=\"enum rustorch::gpu::MemoryLayout\">MemoryLayout</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"enum\" href=\"rustorch/gpu/enum.OpType.html\" title=\"enum rustorch::gpu::OpType\">OpType</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"enum\" href=\"rustorch/gpu/metal_kernels/enum.MetalKernelType.html\" title=\"enum rustorch::gpu::metal_kernels::MetalKernelType\">MetalKernelType</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"enum\" href=\"rustorch/gpu/opencl_kernels/enum.OpenClKernelType.html\" title=\"enum rustorch::gpu::opencl_kernels::OpenClKernelType\">OpenClKernelType</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"enum\" href=\"rustorch/gpu/smart_device_selector/enum.OperationType.html\" title=\"enum rustorch::gpu::smart_device_selector::OperationType\">OperationType</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"enum\" href=\"rustorch/gpu/unified_kernel_simple/enum.KernelOp.html\" title=\"enum rustorch::gpu::unified_kernel_simple::KernelOp\">KernelOp</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"enum\" href=\"rustorch/memory/analytics/enum.AllocationPattern.html\" title=\"enum rustorch::memory::analytics::AllocationPattern\">AllocationPattern</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"enum\" href=\"rustorch/model_import/formats/enum.ExtendedModelFormat.html\" title=\"enum rustorch::model_import::formats::ExtendedModelFormat\">ExtendedModelFormat</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"enum\" href=\"rustorch/model_import/formats/enum.ModelFormat.html\" title=\"enum rustorch::model_import::formats::ModelFormat\">ModelFormat</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"enum\" href=\"rustorch/profiler/benchmark_suite/enum.BenchmarkCategory.html\" title=\"enum rustorch::profiler::benchmark_suite::BenchmarkCategory\">BenchmarkCategory</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"enum\" href=\"rustorch/tensor/device/enum.Device.html\" title=\"enum rustorch::tensor::device::Device\">Device</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"enum\" href=\"rustorch/validation/consistency_checker/enum.ViolationSeverity.html\" title=\"enum rustorch::validation::consistency_checker::ViolationSeverity\">ViolationSeverity</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"enum\" href=\"rustorch/validation/quality_metrics/enum.IssueSeverity.html\" title=\"enum rustorch::validation::quality_metrics::IssueSeverity\">IssueSeverity</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"enum\" href=\"rustorch/validation/quality_metrics/enum.QualityDimension.html\" title=\"enum rustorch::validation::quality_metrics::QualityDimension\">QualityDimension</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"rustorch/model_import/formats/struct.CustomFormat.html\" title=\"struct rustorch::model_import::formats::CustomFormat\">CustomFormat</a>"]]]]);
    if (window.register_implementors) {
        window.register_implementors(implementors);
    } else {
        window.pending_implementors = implementors;
    }
})()
//{"start":57,"fragment_lengths":[6186]}