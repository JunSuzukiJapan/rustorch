{
  "permissions": {
    "allow": [
      "Bash(cargo doc:*)",
      "Bash(sed:*)",
      "Bash(find:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(RUST_BACKTRACE=1 cargo run --example pytorch_conversion_demo)",
      "mcp__serena__find_symbol",
      "Bash(git push:*)",
      "Bash(gh release create:*)",
      "mcp__serena__search_for_pattern",
      "Bash(cargo build:*)",
      "mcp__sequential-thinking__sequentialthinking",
      "Bash(cargo test)",
      "Bash(cargo test:*)",
      "Bash(cargo run:*)",
      "Bash(git check-ignore:*)",
      "mcp__morphllm-fast-apply__list_directory",
      "mcp__serena__get_symbols_overview",
      "mcp__serena__list_dir",
      "Bash(grep:*)",
      "mcp__serena__think_about_whether_you_are_done",
      "mcp__serena__find_file",
      "Bash(cargo check:*)",
      "Bash(cargo fix:*)",
      "mcp__serena__think_about_task_adherence",
      "mcp__serena__list_memories",
      "mcp__morphllm-fast-apply__search_files",
      "mcp__morphllm-fast-apply__create_directory",
      "Bash(RUST_BACKTRACE=1 cargo test execution::runtime::tests::test_graph_builder)",
      "Bash(rg:*)",
      "Bash(cargo bench:*)",
      "Bash(RUST_LOG=debug cargo bench --bench optimization_benchmark)",
      "Bash(cargo clippy:*)",
      "Bash(cargo fmt:*)",
      "Bash(wasm-pack build:*)",
      "Bash(python3:*)",
      "mcp__playwright__browser_navigate",
      "mcp__playwright__browser_click",
      "mcp__playwright__browser_close",
      "Bash(timeout 30 cargo test --lib)",
      "Bash(RUST_TEST_THREADS=1 timeout 60 cargo test --lib)",
      "Bash(git pull:*)",
      "Bash(git stash:*)",
      "Bash(git checkout:*)",
      "Bash(git merge:*)",
      "Bash(git rebase:*)",
      "mcp__serena__list_memories",
      "Bash(git tag:*)",
      "Bash(cargo publish:*)",
      "Bash(RUST_TEST_THREADS=1 timeout 60 cargo test --lib --no-default-features)",
      "Bash(timeout 30 cargo test --lib --no-default-features tensor:: -- --test-threads=1)",
      "Bash(timeout 30 cargo test --lib --no-default-features autograd:: nn:: -- --test-threads=1)",
      "Bash(timeout 30 cargo test --lib --no-default-features autograd::tests nn::tests -- --test-threads=1)",
      "Bash(timeout 30 cargo test --lib --no-default-features autograd -- --test-threads=1)",
      "Bash(timeout 30 cargo run --example eigenvalue_demo --features linalg)",
      "Bash(timeout 30 cargo run --example vision_pipeline_demo --no-default-features)",
      "Bash(timeout 30 cargo run --example boston_housing_regression --no-default-features)",
      "Bash(timeout 15 cargo run --example activation_demo --no-default-features)",
      "Bash(timeout 15 cargo run --example embedding_demo --no-default-features)",
      "Bash(git branch:*)",
      "Bash(cargo publish:*)",
      "Bash(git tag:*)",
      "Bash(jupyter lab --version)",
      "Bash(pip install:*)",
      "Bash(pyenv:*)",
      "Bash(pip3 install:*)",
      "Bash(pipx install:*)",
      "Bash(xcode-select:*)",
      "Bash(/usr/local/Cellar/python@3.9/3.9.19/bin/python3 -m pip install:*)",
      "Bash(brew install:*)",
      "Bash(jupyter-lab --version)",
      "Bash(maturin develop:*)",
      "Bash(source:*)",
      "Bash(jupyter lab:*)",
      "Bash(chmod:*)",
      "Bash(timeout 30 cargo test --lib --no-default-features)",
      "Bash(rustc --version)",
      "Bash(rustc:*)",
      "Bash(./debug_complex:*)",
      "Bash(RUST_BACKTRACE=1 cargo test --no-default-features complex::tests::test_complex_matrix_transpose -- --exact)",
      "Bash(RUST_BACKTRACE=1 cargo test --no-default-features --lib tensor::complex::tests::test_complex_matrix_transpose)",
      "Bash(gh pr create:*)",
      "Bash(cargo deny:*)",
      "Bash(cargo:*)",
      "Bash(chmod:*)",
      "WebSearch",
      "Bash(bash:*)",
      "Bash(LANG=en_US.UTF-8 bash -c 'source ./quick_start.sh')",
      "Bash(LANG=es_ES.UTF-8 bash -c 'source ./quick_start.sh')",
      "WebFetch(domain:github.com)",
      "Bash(pip3 install:*)",
      "Bash(tree:*)",
      "Bash(jupyter:*)",
      "Bash(rustc:*)",
      "Bash(./test_rust_kernel)",
      "Bash(./start_jupyter_webgpu.sh:*)",
      "Bash(evcxr_jupyter:*)",
      "Read(/Users/suzukijun/.config/**)",
      "Bash(./quick_start_rust_kernel.sh:*)",
      "mcp__serena__activate_project",
      "mcp__serena__check_onboarding_performed",
      "Bash(timeout 30 cargo test --lib --no-default-features nn -- --test-threads=1)",
      "Bash(timeout 30 cargo test --lib --no-default-features optim -- --test-threads=1)",
      "Bash(timeout 30 cargo test --lib --no-default-features gpu -- --test-threads=1)",
      "Bash(timeout 30 cargo test --lib --no-default-features vision:: data:: distributed:: -- --test-threads=1)",
      "Bash(timeout 30 cargo test --lib --no-default-features training:: validation:: utils:: -- --test-threads=1)",
      "Bash(timeout 30 cargo test --lib --no-default-features vision data distributed training validation utils -- --test-threads=1)",
      "Bash(timeout 30 cargo test --lib --features metal gpu -- --test-threads=1)",
      "Bash(gh run list:*)",
      "Bash(gh run view:*)",
      "Bash(git fetch:*)",
      "Bash(gh pr view:*)",
      "Bash(./install_jupyter.sh:*)",
      "Bash(pkill:*)",
      "Read(//Users/junsuzuki/**)",
      "Bash(git remote get-url:*)",
      "Bash(curl:*)",
      "Bash(git restore:*)",
      "mcp__serena__onboarding",
      "Bash(rust-analyzer:*)",
      "Bash(rustup component:*)",
      "mcp__serena__write_memory",
      "Bash(cat:*)",
      "Bash(for file in */*.ipynb)",
      "Bash(do echo \"Updating $file\")",
      "Bash(done)",
      "mcp__serena__read_memory",
      "mcp__serena__get_current_config",
      "mcp__serena__think_about_collected_information",
      "mcp__serena__replace_symbol_body",
      "Bash(timeout 30 cargo test --lib memory::enhanced_pool::tests::test_garbage_collection -- --test-threads=1)",
      "Bash(sort:*)",
      "Bash(gh pr checks:*)",
      "Bash(gh run watch:*)",
      "mcp__morphllm-fast-apply__read_file",
      "mcp__morphllm-fast-apply__tiny_edit_file"
    ],
    "deny": [],
    "ask": [],
    "additionalDirectories": [
      "/usr/local/Cellar/python@3.9/3.9.19/Frameworks/Python.framework/Versions/3.9/lib",
      "/Users/suzukijun/Program/Rust",
      "/Users/suzukijun/Program",
      "/usr/local/Cellar/openblas/0.3.30/lib",
      "/Users/suzukijun/.claude"
    ]
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "serena"
  ]
}