{
  "permissions": {
    "allow": [
      "Bash(cargo check:*)",
      "Bash(git add:*)",
      "Bash(git push:*)",
      "Bash(cargo run:*)",
      "Bash(cargo test:*)",
      "Bash(RUST_BACKTRACE=1 cargo test nn::rnn::tests::test_rnn_cell_forward -- --nocapture)",
      "Bash(RUST_BACKTRACE=1 cargo test nn::rnn::tests::test_rnn_multi_layer -- --nocapture)",
      "Bash(RUST_BACKTRACE=1 cargo test nn::lstm::tests::test_lstm_cell_forward -- --nocapture)",
      "Bash(cargo publish:*)",
      "Bash(git commit:*)",
      "Bash(cargo:*)",
      "Bash(grep:*)",
      "Bash(rm:*)",
      "Bash(timeout 30s cargo test:*)",
      "Bash(rustdoc:*)",
      "Bash(find:*)",
      "Bash(RUST_BACKTRACE=1 cargo test --doc)",
      "Bash(mkdir:*)",
      "Bash(chmod:*)",
      "Bash(./build_wasm.sh:*)",
      "Bash(wasm-pack build:*)",
      "Bash(git checkout:*)",
      "Bash(rustup target:*)",
      "Bash(maturin develop:*)",
      "Bash(pip install:*)",
      "Bash(python3:*)",
      "Bash(rustup:*)",
      "Bash(export:*)",
      "Bash(PYO3_PYTHON=/usr/local/bin/python3.9 cargo build --release)",
      "Bash(PYO3_PYTHON=/usr/local/bin/python3.9 /usr/local/bin/python3.9 test_basic.py)",
      "Bash(PYO3_PYTHON=/usr/local/bin/python3.9 LDFLAGS=\"-L/usr/local/lib/python3.9/config-3.9-darwin -lpython3.9\" cargo build --release)",
      "Bash(cp:*)",
      "Bash(mv:*)",
      "Bash(git reset:*)",
      "Bash(PYO3_PYTHON=/usr/local/bin/python3.9 /usr/local/bin/python3.9 test_advanced.py)",
      "Bash(PYO3_PYTHON=/usr/local/bin/python3.9 /usr/local/bin/python3.9 test_minimal.py)",
      "Bash(timeout 60s cargo bench --no-default-features --bench simple_performance_test)",
      "Bash(timeout 30s cargo bench --bench tensor_ops)",
      "Bash(for bench in autograd_ops memory_pool optimized_ops quick_benchmark simple_performance_test tensor_ops)",
      "Bash(do echo \"=== Checking $bench ===\")",
      "Bash(done)",
      "Bash(RUSTFLAGS=\"-W unused\" cargo check --benches)",
      "WebSearch",
      "Bash(RUST_BACKTRACE=1 cargo test --lib safe_ops::tests::test_tensor_stats -- --nocapture)",
      "Bash(timeout 30s cargo bench --bench nn_benchmark)",
      "Bash(rg:*)",
      "Bash(rustc:*)",
      "Bash(RUST_BACKTRACE=1 cargo test --lib test_sequential_forward_pass -- --nocapture)",
      "Bash(timeout 60s cargo bench --bench simple_performance_test)",
      "Bash(RUST_BACKTRACE=1 cargo run --release --example performance_test)",
      "Bash(./target/release/deps/simple_performance_test-b3d2edb500ff492a)",
      "Bash(./target/release/deps/simple_performance_test-b3d2edb500ff492a --bench)",
      "Bash(timeout 60s cargo bench --bench matrix_decomposition_benchmark --no-default-features -- --quick)",
      "Bash(timeout 60s cargo bench --bench optimized_matrix_benchmark --no-default-features -- --quick)",
      "Bash(./manual_bench)",
      "Bash(./simple_bench)",
      "Bash(brew list:*)",
      "Bash(brew install:*)",
      "Bash(pkg-config:*)",
      "Bash(./test_linalg)",
      "Bash(./matrix_bench)",
      "Bash(git tag:*)",
      "Bash(timeout 60s cargo bench --bench micro_distributions_benchmark --no-default-features)",
      "Bash(RUSTFLAGS=\"-L /usr/local/Cellar/openblas/0.3.30/lib\" cargo run --example svd_demo)",
      "Bash(nm:*)",
      "Bash(RUSTFLAGS=\"-L /usr/local/Cellar/openblas/0.3.30/lib -l openblas\" cargo run --example svd_demo)",
      "Bash(RUSTFLAGS=\"-L /usr/local/Cellar/openblas/0.3.30/lib -l openblas\" cargo run --example matrix_decomposition_demo)",
      "Bash(RUSTFLAGS=\"-L /usr/local/Cellar/openblas/0.3.30/lib -l openblas\" cargo run --example special_functions_demo)",
      "Bash(RUST_BACKTRACE=1 cargo test --lib tensor::complex::tests::test_complex_matrix_multiplication --no-default-features -- --nocapture)",
      "Bash(RUST_BACKTRACE=full cargo test --lib tensor::complex::tests::test_complex_matrix_multiplication --no-default-features -- --nocapture)",
      "Bash(timeout 60s cargo bench --bench special_functions_benchmark --no-default-features)",
      "Bash(RUST_BACKTRACE=1 cargo test --no-default-features special::bessel::tests::test_bessel_y -- --nocapture)",
      "WebFetch(domain:dlmf.nist.gov)",
      "Bash(RUST_BACKTRACE=1 cargo test --no-default-features special::bessel::tests::test_bessel_recurrence -- --nocapture)",
      "Bash(RUST_BACKTRACE=1 cargo test --no-default-features special::error::tests::test_erf_series_vs_approx -- --nocapture)",
      "Bash(RUST_BACKTRACE=1 cargo test --no-default-features special::error::tests::test_erfcx_basic -- --nocapture)",
      "Bash(RUSTFLAGS=\"--cfg test_simplified_only\" cargo run --example pytorch_conversion_simple_demo)",
      "Bash(timeout 300 cargo test --lib --no-default-features)",
      "Bash(./benches/manual_quick_bench.rs)",
      "Bash(gtimeout 30s cargo bench --bench tensor_ops)",
      "Bash(./manual_quick_bench)",
      "Bash(RUSTFLAGS=\"--cfg test_simplified_only\" cargo test --lib --no-default-features --verbose)",
      "Bash(RUSTFLAGS=\"--cfg test_simplified_only\" cargo test --lib profiler::tests --no-default-features -- --nocapture)",
      "Bash(RUSTFLAGS=\"--cfg test_simplified_only\" cargo test --lib profiler::tests::test_basic_profiling --no-default-features -- --nocapture)",
      "Bash(RUSTFLAGS=\"--cfg test_simplified_only\" cargo test --lib profiler::tests --no-default-features)",
      "Bash(timeout 300 cargo test --lib --no-default-features --verbose)",
      "Bash(gtimeout 300 cargo test --lib --no-default-features --verbose)",
      "Bash(RUSTFLAGS=\"-W unused\" cargo check --lib)",
      "Bash(gtimeout 300 cargo test --lib --no-default-features)",
      "Bash(sed:*)",
      "Bash(perl:*)",
      "Bash(RUST_BACKTRACE=1 cargo test --lib profiler::tests::test_nested_profiling --no-default-features -- --nocapture)",
      "Bash(timeout 300s cargo test --lib --no-default-features)",
      "Bash(for:*)",
      "Bash(do sed -i '' 's/use.*DistributedError.*/use crate::error::{RusTorchError, RusTorchResult};/g' \"$file\")",
      "Bash(timeout 30s cargo check --lib)",
      "Bash(do sed -i '' 's/GpuResult/RusTorchResult/g' \"$file\")",
      "Bash(do)",
      "Bash(if ! grep -q \"use.*RusTorchError\" \"$file\")",
      "Bash(then)",
      "Bash(fi)",
      "Bash(if ! grep -q \"use crate::vision::{Image, ImageFormat}\" \"$file\")",
      "Bash(echo:*)",
      "Bash(if [ -f \"$file\" ])",
      "Bash(! grep -q \"use crate::visualization::PlotData\" \"$file\")",
      "Bash(timeout 60s cargo build:*)",
      "Bash(gtimeout:*)",
      "Bash(if rustc --crate-type lib --edition 2021 -L /Users/suzukijun/Program/Rust/rustorch/target/debug/deps --extern rustorch=/Users/suzukijun/Program/Rust/rustorch/target/debug/deps/librustorch.rlib /Users/suzukijun/Program/Rust/rustorch/src/convert/$file)",
      "Bash(else)",
      "Bash(timeout 60s cargo check --lib)",
      "Bash(./target/release/deps/manual_quick_bench-*)",
      "Bash(./test_new_system)",
      "Bash(brew:*)",
      "Bash(RUSTFLAGS=\"-L /usr/local/opt/openblas/lib -l openblas\" cargo test --lib --no-default-features --features \"\" tensor::ops::arithmetic::tests::test_add_v2 --no-run)",
      "Bash(RUSTFLAGS=\"-L /usr/local/opt/openblas/lib -l openblas\" cargo test --lib --no-default-features tensor::ops::arithmetic::tests::test_add_v2)",
      "Bash(RUSTFLAGS=\"-L /usr/local/opt/openblas/lib -l openblas\" cargo test --lib --no-default-features test_add_v2)",
      "Bash(RUSTFLAGS=\"-L /usr/local/opt/openblas/lib -l openblas\" cargo test --lib --no-default-features -- --list)",
      "Bash(RUSTFLAGS=\"-L /usr/local/opt/openblas/lib -l openblas\" cargo test --lib --no-default-features tensor::core::tests)",
      "Bash(RUSTFLAGS=\"-L /usr/local/opt/openblas/lib -l openblas\" cargo test --lib --no-default-features autograd::tests::tests::test_addition)",
      "Bash(RUSTFLAGS=\"-L /usr/local/opt/openblas/lib -l openblas\" cargo test --lib --no-default-features)",
      "Bash(RUSTFLAGS=\"-L /usr/local/opt/openblas/lib -l openblas\" cargo test --lib --no-default-features tensor::ops::matrix::tests::test_trace)",
      "Bash(gh workflow:*)",
      "WebFetch(domain:github.com)",
      "Bash(node:*)",
      "Bash(npm run build-wasm:*)",
      "Bash(bash:*)",
      "Bash(timeout 60s cargo check --lib --no-default-features)",
      "Bash(npm run test:*)",
      "Bash(cat:*)",
      "Bash(yamllint:*)",
      "Bash(timeout 60s cargo check --features \"linalg-netlib,cuda,opencl,mpi,wasm,model-import,safetensors,onnx\" --verbose)",
      "Bash(timeout 60s cargo check --features \"linalg-netlib\" --lib)",
      "Bash(timeout 60s cargo test visualization::tests --lib)",
      "Bash(timeout 60s cargo test tensor::ops::statistical::tests --lib)",
      "Bash(timeout 60s cargo test tensor::ops::reduction::tests --lib)",
      "Bash(timeout 60s cargo test tensor::core::tests --lib)",
      "Bash(timeout 60s cargo test autograd::tests::test_basic_operations --lib)",
      "Bash(timeout 60s cargo test --lib -- --nocapture)",
      "Bash(timeout 30s yamllint:*)",
      "Bash(timeout 60s cargo check --features \"linalg-netlib,cuda\" --lib)",
      "Bash(timeout 60s cargo check --features \"linalg-netlib,opencl,mpi,wasm,model-import,safetensors,onnx\" --lib)",
      "Bash(timeout 60s cargo check --features \"linalg-netlib,opencl,wasm,model-import,safetensors,onnx\" --lib)",
      "Bash(timeout 60s cargo test --features \"linalg-netlib\" --lib)",
      "Bash(/sc:load)",
      "Bash(timeout 60s cargo test tensor::core::tests --lib --no-default-features)",
      "Bash(timeout 60s cargo test --lib --no-default-features -- --list)",
      "Bash(timeout 60s cargo test --lib --no-default-features autograd::tests::test_basic_operations)",
      "mcp__sequential-thinking__sequentialthinking",
      "mcp__serena__*",
      "mcp__morphllm-fast-apply__list_allowed_directories",
      "Bash(timeout 60s cargo test gpu_operations_test --lib --no-default-features)",
      "Bash(timeout 60s cargo test --lib --no-default-features gpu)",
      "Bash(RUST_BACKTRACE=1 cargo test test_max_pool2d_output_shape --lib --no-default-features -- --nocapture)",
      "Bash(timeout 60s cargo bench --bench gpu_performance_benchmark --no-default-features -- --quick)",
      "Bash(timeout 60s cargo bench --bench simple_gpu_bench --no-default-features)",
      "Bash(timeout 60s ./target/release/deps/simple_gpu_bench-7c3b503a014d1b89 --bench:*)",
      "Bash(timeout:*)",
      "Bash(system_profiler:*)",
      "Bash(nvcc:*)",
      "Bash(clinfo:*)",
      "Read(//System/Library/Frameworks/**)",
      "Read(//System/Library/Frameworks/**)",
      "Bash(RUSTFLAGS=\"-L /usr/local/Cellar/openblas/0.3.30/lib -l openblas\" timeout 60s cargo run --release --example optimized_benchmark --features \"blas-optimized\")",
      "Bash(pgrep:*)",
      "Bash(env RUSTFLAGS=\"-L /usr/local/Cellar/openblas/0.3.30/lib -l openblas\" timeout 30s cargo test --features \"blas-optimized\" --lib test_optimized_matmul_f32 -- --nocapture)",
      "Bash(env RUSTFLAGS=\"-L /usr/local/Cellar/openblas/0.3.30/lib -l openblas\" timeout 30s rustc --edition 2021 -L target/release/deps --extern rustorch=target/release/librustorch.rlib test_blas.rs -o test_blas)",
      "Bash(gh pr create:*)",
      "mcp__serena__check_onboarding_performed",
      "mcp__serena__list_dir",
      "Bash(sudo apt-get:*)",
      "Read(//tmp/**)",
      "Bash(RUST_BACKTRACE=1 cargo test --features \"linalg-netlib\" --lib tensor::core::tests --no-default-features)",
      "mcp__serena__write_memory"
    ],
    "deny": [],
    "ask": [],
    "additionalDirectories": [
      "/usr/local/Cellar/python@3.9/3.9.19/Frameworks/Python.framework/Versions/3.9/lib",
      "/Users/suzukijun/Program/Rust",
      "/Users/suzukijun/Program",
      "/usr/local/Cellar/openblas/0.3.30/lib",
      "/Users/suzukijun/.claude"
    ]
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "serena"
  ]
}