[package]
name = "rustorch"
version = "0.1.1"
edition = "2021"
authors = ["Jun Suzuki <jun@example.com>"]
description = "A PyTorch-compatible deep learning library in Rust with automatic differentiation, neural networks, and GPU support"
documentation = "https://docs.rs/rustorch"
homepage = "https://github.com/JunSuzukiJapan/rustorch"
repository = "https://github.com/JunSuzukiJapan/rustorch"
license = "MIT OR Apache-2.0"
readme = "README.md"
keywords = ["pytorch", "machine-learning", "tensor", "autograd", "neural-network"]
categories = ["science", "algorithms"]

[lib]
name = "rustorch"
path = "src/lib.rs"

[dependencies]
# Core dependencies
ndarray = { version = "0.15", features = ["rayon", "serde"] }
ndarray-rand = "0.14"
rand = "0.8"
rand_distr = "0.4"
num-traits = "0.2"
num-complex = "0.4"
num-derive = "0.3"

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# Parallel processing
rayon = "1.5"
parking_lot = "0.12"  # For thread-safe locks

# Math and utilities
itertools = "0.10"  # For advanced iteration utilities
approx = "0.5"  # For floating point comparisons

# For GPU support (optional)
#[target.'cfg(any(target_os = "cuda"))'.dependencies]
#cudarc = { version = "0.1", features = ["driver"] }

[dev-dependencies]
# Testing
rstest = "0.13"

[features]
default = ["cpu"]
cpu = []
# Enable CUDA support
#cuda = ["cudarc"]
